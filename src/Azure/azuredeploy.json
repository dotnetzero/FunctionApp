{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appServicePlanNamePrefix": {
            "defaultValue": "appServicePlan",
            "type": "string"
        },
        "environmentName": {
            "defaultValue": "test",
            "type": "string"
        },
        "webAppNamePrefix": {
            "defaultValue": "webAppName",
            "type": "string"
        },
        "appInsightsServiceNamePrefix": {
            "defaultValue": "appinsights",
            "type": "string"
        },
        "storageAccountNamePrefix": {
            "defaultValue": "store01",
            "type": "string"
        },
        "location": {
            "defaultValue": "westus",
            "type": "string"
        },
        "appInsightsLocation": {
            "defaultValue": "westus2",
            "type": "string"
        },
        "connectionStringName": {
            "defaultValue": "connectionString01",
            "type": "string"
        },
        "keyVaultNamePrefix": {
            "type": "string"
        },
        "tenantId": {
            "type": "string"
        },
        "vaultSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ]
        },
        "keysPermissions": {
            "type": "array",
            "defaultValue": [
                "get"
            ]
        },
        "secretsPermissions": {
            "type": "array",
            "defaultValue": [
                "get"
            ]
        },
        "adminAzureKeyVaultAccess": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "resourceGroupUniqueString": "[uniqueString(resourceGroup().id,resourceGroup().location,subscription().subscriptionId)]",
        "storageAccountName": "[concat(parameters('storageAccountNamePrefix'),parameters('environmentName'),variables('resourceGroupUniqueString'))]",
        "webAppName": "[concat(parameters('webAppNamePrefix'),parameters('environmentName'),variables('resourceGroupUniqueString'))]",
        "appServicePlanName": "[concat(parameters('appServicePlanNamePrefix'),parameters('environmentName'),variables('resourceGroupUniqueString'))]",
        "appInsightsServiceName": "[concat(parameters('appInsightsServiceNamePrefix'),parameters('environmentName'),variables('resourceGroupUniqueString'))]",
        "hostNameBindings_Internal": "[concat(variables('webAppName'),'.','azurewebsites.net')]",
        "keyVaultName": "[concat(parameters('keyVaultNamePrefix'),parameters('environmentName'),variables('resourceGroupUniqueString'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "2928b167-97fb-491a-a585-9ff2b88dc38c",
                        "permissions": {
                            "keys": "[parameters('keysPermissions')]",
                            "secrets": "[parameters('secretsPermissions')]"
                        }
                    }
                ],
                "sku": {
                    "name": "[parameters('vaultSku')]",
                    "family": "A"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webappName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').tenantId]",
                        "objectId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webappName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId]",
                        "permissions": {
                            "keys": "[parameters('keysPermissions')]",
                            "secrets": "[parameters('secretsPermissions')]"
                        }
                    },
                    {
                        "tenantId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webappName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').tenantId]",
                        "objectId": "[parameters('adminAzureKeyVaultAccess')]",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
            ]
        },
        {
            "comments": "Azure Blob Storage Key (key1) to Azure KeyVault",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'storageAccountKey1')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ]
        },
        {
            "comments": "Azure Blob Storage Key (key2) to Azure KeyVault",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'storageAccountKey2')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key2)]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "microsoft.insights/components",
            "kind": "other",
            "name": "[variables('appInsightsServiceName')]",
            "apiVersion": "2014-04-01",
            "location": "[parameters('appInsightsLocation')]",
            "tags": {},
            "scale": null,
            "properties": {
                "ApplicationId": "[variables('appInsightsServiceName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "name": "[variables('appServicePlanName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[variables('webAppName')]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "scale": null,
            "properties": {
                "name": "[variables('webAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(variables('webAppName')))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "AppInsights_InstrumentationKey",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsServiceName'))).InstrumentationKey]"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "[parameters('connectionStringName')]",
                            "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('microsoft.insights/components', variables('appInsightsServiceName'))]",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(variables('webAppName'), '/', variables('hostNameBindings_Internal'))]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "siteName": "variables('webAppName')",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
            ]
        }
    ],
    "outputs": {
        "resourceGroupUniqueString": {
            "type": "string",
            "value": "[variables('resourceGroupUniqueString')]"
        },
        "webAppName": {
            "type": "string",
            "value": "[variables('webAppName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "hostNameBindings_Internal": {
            "type": "string",
            "value": "[variables('hostNameBindings_Internal')]"
        },
        "storageAccountKey1": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]"
        },
        "storageAccountKey2": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key2]"
        },
        "AppInsights_InstrumentationKey": {
            "type": "string",
            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsServiceName'))).InstrumentationKey]"
        },
        "principleId": {
            "type": "string",
            "value": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webappName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId]"
        },
        "tenantId": {
            "type": "string",
            "value": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webappName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').tenantId]"
        }
    }
}